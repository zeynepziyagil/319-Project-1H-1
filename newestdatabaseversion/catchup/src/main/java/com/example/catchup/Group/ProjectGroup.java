package com.example.catchup.Group;
import com.example.catchup.Course.Course;
import com.example.catchup.User.StudentService;
import com.example.catchup.User.StudentServiceImpl;
import com.vladmihalcea.hibernate.type.array.ListArrayType;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.springframework.beans.factory.annotation.Autowired;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Entity
@TypeDef(
        name = "list-array",
        typeClass = ListArrayType.class
)
public class ProjectGroup {
    //Unique ID for each group generated by the system
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "courseCode", referencedColumnName = "code")
    private Course course;

    //other properties
    private String name;
    private int memberNum;
    private int maxMemberNum;

    //lists
    @Type(type = "list-array")
    @Column(
            name = "team",
            columnDefinition = "bigInt[]"
    )
    private List<Long> team;

    @Type(type = "list-array")
    @Column(
            name = "uploadedDocuments",
            columnDefinition = "bigInt[]"
    )
    private List<Long> uploadedDocuments;

    public ProjectGroup() {
    }

    public ProjectGroup(Course course,String name, ArrayList<Long> members,int maxMemberNum) {
        this.course = course;
        this.name = name;
        this.maxMemberNum = maxMemberNum;

        //be sure about all members are students
        if(members.size() <= maxMemberNum && 0 < members.size()) {
            this.team = members;
            memberNum = members.size();
        }
        this.uploadedDocuments = new ArrayList<>(0);
    }

    public long getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getMemberNum() {
        return memberNum;
    }

    public int getMaxMemberNum() {
        return maxMemberNum;
    }

    public List<Long> getTeam() {
        return team;
    }

    public List<Long> getUploadedDocuments() {
        return uploadedDocuments;
    }

    public Course getCourse() {
        return course;
    }

    @Override
    public String toString() {
        return "ProjectGroup{" +
                "id=" + id +
                ", course=" + course +
                ", name='" + name + '\'' +
                ", memberNum=" + memberNum +
                ", maxMemberNum=" + maxMemberNum +
                ", team=" + team +
                ", uploadedDocuments=" + uploadedDocuments +
                '}';
    }
}
